// ==========================================
// PHASE 3: CONSUMER PORTAL COMPONENTS
// ==========================================

// Tier Gate Component
const TierGate = ({ user, requiredTier, feature, children, onUpgrade }) => {
    const tierHierarchy = { 'free': 0, 'basic': 1, 'pro': 2, 'premium': 3 };
    const userTierLevel = tierHierarchy[user.subscriptionTier || 'free'];
    const requiredTierLevel = tierHierarchy[requiredTier];

    if (userTierLevel >= requiredTierLevel) {
        return children; // User has access
    }

    // Show upgrade prompt
    return (
        <div style={{
            padding: '40px',
            textAlign: 'center',
            background: 'linear-gradient(135deg, rgba(0,119,204,0.1) 0%, rgba(0,168,107,0.1) 100%)',
            borderRadius: '15px',
            border: '2px dashed #0077CC',
            margin: '20px'
        }}>
            <div style={{ fontSize: '48px', marginBottom: '15px' }}>ðŸ”’</div>
            <h3 style={{ color: '#333', marginBottom: '10px' }}>
                {feature} - {requiredTier.charAt(0).toUpperCase() + requiredTier.slice(1)} Feature
            </h3>
            <p style={{ color: '#666', marginBottom: '20px' }}>
                Upgrade to {requiredTier.charAt(0).toUpperCase() + requiredTier.slice(1)} to unlock this feature
            </p>
            <button
                onClick={() => onUpgrade()}
                style={{
                    background: 'linear-gradient(135deg, #0077CC 0%, #00A86B 100%)',
                    color: '#fff',
                    padding: '12px 30px',
                    borderRadius: '8px',
                    border: 'none',
                    fontSize: '16px',
                    fontWeight: 'bold',
                    cursor: 'pointer'
                }}
            >
                Upgrade Now
            </button>
        </div>
    );
};

// Subscription Management Component
const SubscriptionManagement = ({ user, usageStats, onClose, onUpgrade }) => {
    const tiers = [
        {
            id: 'free',
            name: 'Free',
            price: '$0/month',
            features: [
                '10 resource views per month',
                'Basic check-ins only (3 per week)',
                'No coach access',
                'Community chat (read-only)'
            ],
            color: '#6c757d'
        },
        {
            id: 'basic',
            name: 'Basic',
            price: '$15/month',
            features: [
                'Unlimited resource access',
                'Full check-in features',
                'Progress charts',
                'Community chat (full access)'
            ],
            color: '#00A86B'
        },
        {
            id: 'pro',
            name: 'Pro',
            price: '$30/month',
            features: [
                'All Basic features',
                '2 coach sessions per month',
                'Coach messaging',
                'Custom goals',
                'Priority support'
            ],
            color: '#0077CC'
        },
        {
            id: 'premium',
            name: 'Premium',
            price: '$50/month',
            features: [
                'All Pro features',
                '4 coach sessions per month',
                'Unlimited coach messaging',
                'Google Calendar integration',
                'Early access to features'
            ],
            color: '#FF8C00'
        }
    ];

    const currentTier = user.subscriptionTier || 'free';

    return (
        <div style={{
            position: 'fixed',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            background: 'rgba(0,0,0,0.7)',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            zIndex: 10000,
            padding: '20px',
            overflowY: 'auto'
        }}>
            <div style={{
                background: '#fff',
                borderRadius: '15px',
                maxWidth: '900px',
                width: '100%',
                maxHeight: '90vh',
                display: 'flex',
                flexDirection: 'column'
            }}>
                {/* Header */}
                <div style={{
                    padding: '20px 30px',
                    borderBottom: '1px solid #ddd',
                    display: 'flex',
                    justifyContent: 'space-between',
                    alignItems: 'center'
                }}>
                    <h2 style={{ margin: 0, color: '#333', fontSize: '24px' }}>
                        Subscription Management
                    </h2>
                    <button
                        onClick={onClose}
                        style={{
                            background: 'transparent',
                            border: 'none',
                            fontSize: '28px',
                            cursor: 'pointer',
                            color: '#999'
                        }}
                    >
                        Ã—
                    </button>
                </div>

                {/* Current Plan & Usage Stats */}
                <div style={{
                    padding: '20px 30px',
                    background: '#f8f9fa',
                    borderBottom: '1px solid #ddd'
                }}>
                    <h3 style={{ margin: '0 0 15px 0', color: '#333' }}>Current Plan: {currentTier.charAt(0).toUpperCase() + currentTier.slice(1)}</h3>
                    <div style={{
                        display: 'grid',
                        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                        gap: '15px'
                    }}>
                        <div style={{ padding: '15px', background: '#fff', borderRadius: '8px' }}>
                            <div style={{ fontSize: '12px', color: '#666', marginBottom: '5px' }}>Resource Views This Month</div>
                            <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#0077CC' }}>
                                {usageStats.resourceViewsThisMonth}
                                {currentTier === 'free' && ' / 10'}
                            </div>
                        </div>
                        <div style={{ padding: '15px', background: '#fff', borderRadius: '8px' }}>
                            <div style={{ fontSize: '12px', color: '#666', marginBottom: '5px' }}>Check-Ins This Week</div>
                            <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#00A86B' }}>
                                {usageStats.checkInsThisWeek}
                                {currentTier === 'free' && ' / 3'}
                            </div>
                        </div>
                        {(currentTier === 'pro' || currentTier === 'premium') && (
                            <div style={{ padding: '15px', background: '#fff', borderRadius: '8px' }}>
                                <div style={{ fontSize: '12px', color: '#666', marginBottom: '5px' }}>Sessions Remaining</div>
                                <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#FF8C00' }}>
                                    {usageStats.sessionsRemaining} / {currentTier === 'pro' ? '2' : '4'}
                                </div>
                            </div>
                        )}
                    </div>
                </div>

                {/* Tier Comparison */}
                <div style={{ padding: '30px', overflowY: 'auto', flex: 1 }}>
                    <h3 style={{ margin: '0 0 20px 0', color: '#333', textAlign: 'center' }}>Choose Your Plan</h3>
                    <div style={{
                        display: 'grid',
                        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                        gap: '20px'
                    }}>
                        {tiers.map(tier => (
                            <div key={tier.id} style={{
                                padding: '20px',
                                border: currentTier === tier.id ? `3px solid ${tier.color}` : '1px solid #ddd',
                                borderRadius: '10px',
                                background: currentTier === tier.id ? 'rgba(0,119,204,0.05)' : '#fff'
                            }}>
                                <h4 style={{ margin: '0 0 10px 0', color: tier.color, fontSize: '20px' }}>
                                    {tier.name}
                                </h4>
                                <div style={{ fontSize: '24px', fontWeight: 'bold', color: '#333', marginBottom: '15px' }}>
                                    {tier.price}
                                </div>
                                <ul style={{ listStyle: 'none', padding: 0, margin: '0 0 15px 0' }}>
                                    {tier.features.map((feature, idx) => (
                                        <li key={idx} style={{
                                            padding: '5px 0',
                                            fontSize: '13px',
                                            color: '#666',
                                            borderBottom: idx < tier.features.length - 1 ? '1px solid #f0f0f0' : 'none'
                                        }}>
                                            âœ“ {feature}
                                        </li>
                                    ))}
                                </ul>
                                {currentTier === tier.id ? (
                                    <div style={{
                                        padding: '10px',
                                        background: tier.color,
                                        color: '#fff',
                                        textAlign: 'center',
                                        borderRadius: '5px',
                                        fontSize: '14px',
                                        fontWeight: 'bold'
                                    }}>
                                        Current Plan
                                    </div>
                                ) : (
                                    <button
                                        onClick={() => onUpgrade(tier.id)}
                                        style={{
                                            width: '100%',
                                            padding: '10px',
                                            background: tier.color,
                                            color: '#fff',
                                            border: 'none',
                                            borderRadius: '5px',
                                            fontSize: '14px',
                                            fontWeight: 'bold',
                                            cursor: 'pointer'
                                        }}
                                    >
                                        {tiers.findIndex(t => t.id === tier.id) > tiers.findIndex(t => t.id === currentTier)
                                            ? 'Upgrade'
                                            : 'Downgrade'}
                                    </button>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            </div>
        </div>
    );
};

// Session Booking Component
const SessionBooking = ({ user, bookedSessions, onClose, onBookSession }) => {
    const [selectedDate, setSelectedDate] = useState(null);
    const [selectedTime, setSelectedTime] = useState(null);
    const [sessionType, setSessionType] = useState('video'); // video, phone

    // Mock available time slots (would come from coach availability in real app)
    const availableSlots = [
        '09:00 AM', '10:00 AM', '11:00 AM', '01:00 PM',
        '02:00 PM', '03:00 PM', '04:00 PM', '05:00 PM'
    ];

    const handleBookSession = () => {
        if (!selectedDate || !selectedTime) {
            alert('Please select a date and time');
            return;
        }

        const tier = user.subscriptionTier || 'free';
        const maxSessions = tier === 'premium' ? 4 : tier === 'pro' ? 2 : 0;

        if (tier === 'free' || tier === 'basic') {
            alert('Session booking is only available for Pro and Premium tiers. Please upgrade your subscription.');
            return;
        }

        if (bookedSessions.length >= maxSessions) {
            alert(`You have reached your monthly session limit (${maxSessions} sessions). Sessions reset on the 1st of each month.`);
            return;
        }

        onBookSession({
            date: selectedDate,
            time: selectedTime,
            type: sessionType,
            status: 'scheduled'
        });

        setSelectedDate(null);
        setSelectedTime(null);
    };

    return (
        <div style={{
            position: 'fixed',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            background: 'rgba(0,0,0,0.7)',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'center',
            zIndex: 10000,
            padding: '20px'
        }}>
            <div style={{
                background: '#fff',
                borderRadius: '15px',
                maxWidth: '700px',
                width: '100%',
                maxHeight: '90vh',
                overflow: 'auto'
            }}>
                {/* Header */}
                <div style={{
                    padding: '20px 30px',
                    borderBottom: '1px solid #ddd',
                    display: 'flex',
                    justifyContent: 'space-between',
                    alignItems: 'center'
                }}>
                    <h2 style={{ margin: 0, color: '#333', fontSize: '24px' }}>
                        Book a Coach Session
                    </h2>
                    <button
                        onClick={onClose}
                        style={{
                            background: 'transparent',
                            border: 'none',
                            fontSize: '28px',
                            cursor: 'pointer',
                            color: '#999'
                        }}
                    >
                        Ã—
                    </button>
                </div>

                <div style={{ padding: '30px' }}>
                    {/* Session Type */}
                    <div style={{ marginBottom: '25px' }}>
                        <label style={{ display: 'block', marginBottom: '10px', fontWeight: 'bold', color: '#333' }}>
                            Session Type
                        </label>
                        <div style={{ display: 'flex', gap: '10px' }}>
                            <button
                                onClick={() => setSessionType('video')}
                                style={{
                                    flex: 1,
                                    padding: '12px',
                                    background: sessionType === 'video' ? '#0077CC' : '#f8f9fa',
                                    color: sessionType === 'video' ? '#fff' : '#333',
                                    border: sessionType === 'video' ? 'none' : '1px solid #ddd',
                                    borderRadius: '8px',
                                    cursor: 'pointer',
                                    fontWeight: 'bold'
                                }}
                            >
                                ðŸ“¹ Video Call
                            </button>
                            <button
                                onClick={() => setSessionType('phone')}
                                style={{
                                    flex: 1,
                                    padding: '12px',
                                    background: sessionType === 'phone' ? '#0077CC' : '#f8f9fa',
                                    color: sessionType === 'phone' ? '#fff' : '#333',
                                    border: sessionType === 'phone' ? 'none' : '1px solid #ddd',
                                    borderRadius: '8px',
                                    cursor: 'pointer',
                                    fontWeight: 'bold'
                                }}
                            >
                                ðŸ“ž Phone Call
                            </button>
                        </div>
                    </div>

                    {/* Date Selection */}
                    <div style={{ marginBottom: '25px' }}>
                        <label style={{ display: 'block', marginBottom: '10px', fontWeight: 'bold', color: '#333' }}>
                            Select Date
                        </label>
                        <input
                            type="date"
                            value={selectedDate || ''}
                            onChange={(e) => setSelectedDate(e.target.value)}
                            min={new Date().toISOString().split('T')[0]}
                            style={{
                                width: '100%',
                                padding: '12px',
                                border: '1px solid #ddd',
                                borderRadius: '8px',
                                fontSize: '14px'
                            }}
                        />
                    </div>

                    {/* Time Selection */}
                    <div style={{ marginBottom: '25px' }}>
                        <label style={{ display: 'block', marginBottom: '10px', fontWeight: 'bold', color: '#333' }}>
                            Select Time
                        </label>
                        <div style={{
                            display: 'grid',
                            gridTemplateColumns: 'repeat(4, 1fr)',
                            gap: '10px'
                        }}>
                            {availableSlots.map(slot => (
                                <button
                                    key={slot}
                                    onClick={() => setSelectedTime(slot)}
                                    style={{
                                        padding: '10px',
                                        background: selectedTime === slot ? '#00A86B' : '#f8f9fa',
                                        color: selectedTime === slot ? '#fff' : '#333',
                                        border: selectedTime === slot ? 'none' : '1px solid #ddd',
                                        borderRadius: '5px',
                                        cursor: 'pointer',
                                        fontSize: '12px'
                                    }}
                                >
                                    {slot}
                                </button>
                            ))}
                        </div>
                    </div>

                    {/* Booked Sessions */}
                    {bookedSessions.length > 0 && (
                        <div style={{ marginBottom: '25px' }}>
                            <h4 style={{ margin: '0 0 10px 0', color: '#333' }}>Your Upcoming Sessions</h4>
                            {bookedSessions.map((session, idx) => (
                                <div key={idx} style={{
                                    padding: '12px',
                                    background: '#f8f9fa',
                                    borderRadius: '8px',
                                    marginBottom: '10px',
                                    display: 'flex',
                                    justifyContent: 'space-between',
                                    alignItems: 'center'
                                }}>
                                    <div>
                                        <div style={{ fontWeight: 'bold', color: '#333' }}>
                                            {session.date} at {session.time}
                                        </div>
                                        <div style={{ fontSize: '12px', color: '#666' }}>
                                            {session.type === 'video' ? 'ðŸ“¹ Video Call' : 'ðŸ“ž Phone Call'}
                                        </div>
                                    </div>
                                    <div style={{
                                        padding: '5px 12px',
                                        background: '#00A86B',
                                        color: '#fff',
                                        borderRadius: '5px',
                                        fontSize: '12px'
                                    }}>
                                        {session.status}
                                    </div>
                                </div>
                            ))}
                        </div>
                    )}

                    {/* Book Button */}
                    <button
                        onClick={handleBookSession}
                        style={{
                            width: '100%',
                            padding: '15px',
                            background: 'linear-gradient(135deg, #0077CC 0%, #00A86B 100%)',
                            color: '#fff',
                            border: 'none',
                            borderRadius: '8px',
                            fontSize: '16px',
                            fontWeight: 'bold',
                            cursor: 'pointer'
                        }}
                    >
                        Book Session
                    </button>
                </div>
            </div>
        </div>
    );
};

